
target/main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000052  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  000000a6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000000f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000446  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003fc  00000000  00000000  0000055e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000155  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001d7  00000000  00000000  00000aaf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	02 d0       	rcall	.+4      	; 0x30 <main>
  2c:	10 c0       	rjmp	.+32     	; 0x4e <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <main>:
  30:	8f ef       	ldi	r24, 0xFF	; 255
  32:	87 bb       	out	0x17, r24	; 23
  34:	18 ba       	out	0x18, r1	; 24
  36:	81 e0       	ldi	r24, 0x01	; 1
  38:	86 bb       	out	0x16, r24	; 22
  3a:	2f ef       	ldi	r18, 0xFF	; 255
  3c:	39 e6       	ldi	r19, 0x69	; 105
  3e:	98 e1       	ldi	r25, 0x18	; 24
  40:	21 50       	subi	r18, 0x01	; 1
  42:	30 40       	sbci	r19, 0x00	; 0
  44:	90 40       	sbci	r25, 0x00	; 0
  46:	e1 f7       	brne	.-8      	; 0x40 <__SREG__+0x1>
  48:	00 c0       	rjmp	.+0      	; 0x4a <__SREG__+0xb>
  4a:	00 00       	nop
  4c:	f5 cf       	rjmp	.-22     	; 0x38 <main+0x8>

0000004e <_exit>:
ENDF _exit

	/* Code from .fini8 ... .fini1 sections inserted by ld script.  */

	.section .fini0,"ax",@progbits
	cli
  4e:	f8 94       	cli

00000050 <__stop_program>:
__stop_program:
	rjmp	__stop_program
  50:	ff cf       	rjmp	.-2      	; 0x50 <__stop_program>
